),
showInLegend = TRUE
)%>%
hc_tooltip(shared = TRUE, formatter = JS("
function() {
var header = '<span style=\"font-size: 11px\"> <b>' + this.x + ' </b></span><br/>';
var body = this.points.reduce(function (s, point) {
return s + '<span style=\"color:' + point.color + '\">' + point.series.name + '</span>: <b>' + point.y + '</b><br/>';
}, '');
var superficie = this.points[0].point.superficie; // Obtener superficie del primer punto
var footer = '<span style=\"font-size: 10px\">Con un total de <b> ' + superficie + '</b>  ha protegidas</span>';
return header + body + footer;
}
")
)
hc
saveWidget(as_widget(hc), "plt-numanp.html")
resumen_superficies <- df_anp %>%
group_by(id_superficie) %>%  # Agrupar por id_superficie
summarise(
num_anp = n(),  # Contar cuántas ANP tienen ese tipo de superficie
superficie_t_total = sum(superficie_terrestre, na.rm = TRUE),
superficie_m_total = sum(superficie_marina, na.rm = TRUE)
)
resumen_superficie = resumen_superficies
total_sup = sum(df_anp$superficie_total)
sup_nacional_terrestre = 196437500.00
sup_nacional_marina =314992000.00
ambientes <- data.frame(
Tipo = c("<span style=\"font-size: 12px\"> <b>Superficie terrestre</b></span>",
# "<span style=\"font-size: 12px\"> <b>Medio costero marino</b></span>",
"<span style=\"font-size: 12px\"> <b>Superficie marina</b></span>"
),
Superficie = c(round(sum(resumen_superficies$superficie_t_total),3),
round(sum(resumen_superficies$superficie_m_total),3)
),
Porcentaje_ANP = c( round(sum(resumen_superficies$superficie_t_total)/total_sup*100,2),
round(round(sum(resumen_superficies$superficie_m_total),3)/total_sup*100,2)),
Porcentaje_Territorio = c(round(sum(resumen_superficies$superficie_t_total)/sup_nacional_terrestre*100,2),
round(sum(resumen_superficies$superficie_m_total)/sup_nacional_marina*100,2))
)
notas_terrestres <- paste0("Representa un ",
"<b>",ambientes$Porcentaje_Territorio[1],"%","</b>",
" de la superficie terrestre nacional"
)
notas_marinos <- paste0("Representa un ",
"<b>",ambientes$Porcentaje_Territorio[2],"%","</b> de la superficie marina del territorio nacional"
)
ambientes$hover_text <- paste(c(
paste0(notas_terrestres,
"<br>Superficie: ",
"<b>",scales::comma(ambientes$Superficie[1]),"</b>"," ha",
"<br>Porcentaje del total protegido: ",
"<b>",ambientes$Porcentaje_ANP[1],"</b>", "%",
"<br>&nbsp;&nbsp;<b>",resumen_superficies$num_anp[1] ," ANP</b> cuentan con superficie exclusivamente terrestre.</b>"
),
paste0(notas_marinos,
"<br>Superficie: ",
"<b>",scales::comma(ambientes$Superficie[2]),"</b>", " ha",
"<br>Porcentaje del total protegido: ",
"<b>",ambientes$Porcentaje_ANP[2], "%","</b>",
"<br>&nbsp;&nbsp;  <b>",resumen_superficies$num_anp[2] ," ANP</b> cuentan con superficie exclusivamente marina y<br>&nbsp;&nbsp;
<b> ",resumen_superficies$num_anp[3] ," ANP</b> cuentan con una superficie costero-marino</b>"
)
)
)
colnames(ambientes)[1] <- "name"
colnames(ambientes)[3] <- "y"
ambientes$color =c("#8C5C47","#4A8CB0")
ambientes$Superficie =scales::comma(ambientes$Superficie)
df <-select(ambientes,  name,y, color, hover_text,r=Superficie)
fig <- highchart()
fig <- fig %>%
hc_chart(type = 'pie',
polar = FALSE,
inverted = FALSE,
options3d = list(
enabled = TRUE,
alpha = 20,
beta = 5 #0
)
) %>%
#hc_xAxis(categories = df$name) %>%
hc_add_series(df,
name = 'ambientes',
showInLegend = TRUE,
innerSize = '33%',
dataLabels = list(enabled = TRUE,
format = '{point.name}: {point.percentage:.2f}%',
style = list(color = '#000000', fontSize = '14px')
)
) %>%
hc_plotOptions(series = list(animation = TRUE),
pie = list(
ignoreHiddenPoint = FALSE
)
)%>%
hc_tooltip(
useHTML = TRUE,
pointFormat = '{point.hover_text}'
)%>%
hc_exporting(enabled = TRUE)
fig
#
# # Datos actualizados con la tercera categoría
# ambientes <- data.frame(
#   Tipo = c("<span style=\"font-size: 12px\"> <b>Medio terrestre</b></span>",
#            "<span style=\"font-size: 12px\"> <b>Medio costero-marino</b></span>",
#            "<span style=\"font-size: 12px\"> <b>Medio marino</b></span>"
#            ),
#   Superficie = c(23013380.39, 25415271.29, 45379152.67),
#   Porcentaje_ANP = c(24.53, 27.09, 48.37),
#   Porcentaje_Territorio = c(11.71, 8.07, 14.41)
# )
#
# notas_terrestres <- paste0("Representa un ",
#                           "<b>", ambientes$Porcentaje_Territorio[1],"%","</b>",
#                           " de la superficie terrestre nacional"
#                           )
# notas_costeros <- paste0("Representa un ",
#                         "<b>",ambientes$Porcentaje_Territorio[2],"%","</b>",
#                         " de la superficie costero-marina nacional"
#                         )
# notas_marinos <- paste0("Representa un ",
#                        "<b>",ambientes$Porcentaje_Territorio[3],"%","</b>",
#                        " de la superficie marina del territorio nacional"
#                        )
#
# ambientes$hover_text <- paste(c(
#             paste0("Cuenta con <b>187 ANP</b> </b>",
#                    "<br>Superficie: ",
#                    "<b>",scales::comma(ambientes$Superficie[1]),"</b>"," ha",
#                    "<br>Porcentaje del total protegido: ",
#                    "<b>",ambientes$Porcentaje_ANP[1],"</b>", "%<br>",
#                    notas_terrestres
#                    ),
#             paste0("Cuenta con <b>31 ANP</b>.</b>",
#                    "<br>Superficie: ",
#                    "<b>",scales::comma(ambientes$Superficie[2]),"</b>", " ha",
#                    "<br>Porcentaje del total protegido: ",
#                    "<b>",ambientes$Porcentaje_ANP[2], "%","</b><br>",
#                    notas_costeros
#
#                    ),
#             paste0("Cuenta con <b>8 ANP</b>",
#                    "<br>Superficie: ",
#                    "<b>",scales::comma(ambientes$Superficie[3]),"</b>", " ha",
#                    "<br>Porcentaje del total protegido: ",
#                    "<b>",ambientes$Porcentaje_ANP[3], "%","</b><br>",
#                    notas_marinos
#
#                    )
# ))
#
# colnames(ambientes)[1] <- "name"
# colnames(ambientes)[3] <- "y"
# ambientes$color <- c("#8C5C47","#6FA5C3","#4A8CB0")
# ambientes$Superficie <- scales::comma(ambientes$Superficie)
# df <- select(ambientes, name, y, color, hover_text, r = Superficie)
#
# fig <- highchart()
#
# fig <- fig %>%
#   hc_chart(type = 'pie',
#            polar = FALSE,
#            inverted = FALSE,
#            options3d = list(
#              enabled = TRUE,
#              alpha = 20,
#              beta = 5
#     )
#   ) %>%
#   hc_add_series(df,
#                 name = 'Ambientes',
#                 showInLegend = TRUE,
#                 innerSize = '33%',
#                 dataLabels = list(enabled = TRUE,
#                                   format = '{point.name}: {point.percentage:.2f}%',
#                                   style = list(color = '#000000', fontSize = '14px')
#                                   ),
#                 pie = list(ignoreHiddenPoint = FALSE)
#   ) %>%
#   hc_plotOptions(series = list(animation = TRUE),
#                  pie = list(
#     ignoreHiddenPoint = FALSE,
#       animation = TRUE
#     )
#                  ) %>%
#   hc_tooltip(
#     useHTML = TRUE,
#     pointFormat = '{point.hover_text}'
#   ) %>%
#   hc_exporting(enabled = TRUE)
#
# fig
tipos_vegetacion <- c("Agroecosistemas", "Bosque de Coníferas", "Bosque de Encino",
"Bosque Mesófilo de Montaña", "Manglar", "Matorral Xerófilo",
"Otros tipos de vegetación", "Pastizal", "Selva Caducifolia",
"Selva Perennifolia", "Vegetación Hidrófila", "Sin Vegetación aparente", "Mar Territorial")
superficie_anp <- c(1145131, 2321581, 2481197,
284669, 472274, 8007039,
1873588, 676975, 1949236,
2169652, 764201, 867837, 70794424)
porcentaje_anp_federal <- c(1.22, 2.47, 2.64,
0.30, 0.50, 8.54,
2.00, 0.72, 2.08,
2.31, 0.81, 0.93, 75.47)
#vegetacion = read_csv("data/vegetacion_tb.csv", show_col_types = FALSE)
#vegetacion <- dbGetQuery(con, "SELECT * FROM vegetacion")
vegetacion = df_vegetation
vegetacion$color = rep("#2c3e50", dim(vegetacion)[1])
# vegetacion <- data.frame(
#   Tipos_Vegetacion = tipos_vegetacion,
#   Superficie_ANP = superficie_anp,
#   Porcentaje_ANP_Federal = porcentaje_anp_federal,
#   color = color
# )
vegetacion <- vegetacion %>% arrange((surface)) # desc
df.vegetacion = vegetacion
vegetacion <- vegetacion[c(which(vegetacion$type == "Mar Territorial"),
setdiff(1:nrow(vegetacion),
which(vegetacion$tipo_vegetacion == "Mar Territorial"))), ]
vegetacion=vegetacion[-1,]
vegetacion <- vegetacion[order(-vegetacion$surface), ]
#df = as.data.frame(resumen_ordenado)
#resumen_ordenado <- df[order(df$total), ]
vegetacion$hover_text <- paste("<b>",vegetacion$type,"</b>",
"<br>Superficie en ANP:", "<b>",scales::comma(vegetacion$surface),"</b>", "ha",# vegetacion$Superficie_ANP,
"<br>Porcentaje en ANP Federales:", "<b>",vegetacion$porcentaje,"</b>")
colnames(vegetacion)[2] <- "name"
colnames(vegetacion)[3] <- "y"
colnames(vegetacion)[4] <- "r"
#
df1 <-select(vegetacion, name, y, hover_text)
#
# highchart() %>%
#   hc_chart(type = 'bar') %>%
#   hc_xAxis(categories = df1$name) %>%
#     hc_yAxis_multiples(
#     list(
#       min = 0,
#       title = list(text = "Hectáreas (M: Millones)")
#     ))%>%
#   hc_add_series(df1, name = 'Superficie en ANP',
#                 dataLabels = list(enabled = TRUE,
#                                   style = list(fontSize = "12px")
#
#
#                                   ),
#                 color = cols_ident[3],
#
#
#                 ) %>%
#     hc_tooltip(
#     useHTML = TRUE,
#     pointFormat = '{point.hover_text}'
#   ) %>%
#   hc_plotOptions(series = list(animation = FALSE,
#                                borderRadius = 14,
#                                dataLabels = list(
#                      style = list(
#                        fontSize = "12px"
#                        )
#                      )))%>%
#       hc_exporting(enabled = TRUE)
color_high <- '#CDAA7D'
color_low <- '#F4E9D3'
hc3 <- highchart( ) %>%
hc_chart(type = 'bar') %>%
hc_xAxis(categories = df1$name,
labels = list(style = list(color = 'black',
fontSize = '12px')
)
) %>%
hc_yAxis_multiples(
list(
min = 0,
max = 9100000,
title = list(text = "Total de superficie protegida en hectáreas (M: Millones)",
style = list(color = 'black')
),
labels = list(style = list(color = 'black'))
)
) %>%
hc_add_series(df1, name = 'Superficie en ANP',
labels = list(style = list(color = 'black'),
title = list(
style = list(fontSize = "16px", fontWeight = "bold", color = "black")
)),
dataLabels = list(enabled = TRUE,
style = list(fontSize = "12px")
),
color = list(
linearGradient = list(x1 = 0, x2 = 1, y1 = 0, y2 = 0),
stops = list(
list(0, color_low),
list(1, color_high)
)
),
showInLegend = FALSE
) %>%
hc_tooltip(
useHTML = TRUE,
formatter = JS("function() {
return this.point.hover_text;
}")
) %>%
hc_plotOptions(series = list(animation = TRUE
#borderRadius = 14
)
) %>%
hc_exporting(
enabled = TRUE
)
hc3
saveWidget(as_widget(hc3), "plt-protecanp.html")
entidades_anp1 <- read_csv("data/data-entidadesanp.csv",show_col_types = FALSE)
entidades_anp <- read_csv("data/anp_entidad_federativa_08102024.csv",show_col_types = FALSE)
entidades_anp <- dbGetQuery(con, "SELECT * FROM surfaceanp_entity")
entidades_anp <- read_csv("data/superficie_entidades21112024.csv",show_col_types = FALSE)
entidades_anp = as.data.frame(entidades_anp)
# total_entidades <- entidades_anp %>%
#   group_by(entidad_federativa) %>%
#   summarise(total = sum(suma_superficie_dentro_entidad),
#             num_anp = n()
#             )
resumen_ordenado <- entidades_anp[order(entidades_anp$surface_entity), ] #order(-total
df = as.data.frame(resumen_ordenado)
resumen_ordenado <- df[order(-df$surface_entity), ]
colnames(resumen_ordenado)[2] <- "name"
colnames(resumen_ordenado)[4] <- "y"
color_high <- cols_ident[1] #'#3E7C24'
color_low <- '#7CCD7C'
resumen_ordenado$hover_text <- paste("<b>", resumen_ordenado$name, "</b>",
"<br> Superficie protegida",
"<b>",scales::comma(resumen_ordenado$y),"</b>","ha"#,
#"<br>Cuenta con:",
#"<b>",resumen_ordenado$num_anp,"</b>", "ANP"
)
df1 = select(resumen_ordenado, name, y, hover_text)
hc_map<- highchart() %>%
hc_chart(type = 'bar',
polar = FALSE,
inverted =FALSE
) %>%
hc_xAxis(categories = df1$name,
labels = list(style = list(color = 'black'))
) %>%
hc_yAxis(
# list(
# min = 0,
# max = 3500000,
title = list(text = "Total de superficie protegida en hectáreas (M: Millones)",
style = list(color = 'black')),
labels = list(
max = 3500000,
formatter = JS("function() { return this.value / 1000000 + 'M'; }"),
style = list(color = 'black')
# )
))%>%
hc_add_series(df1, name = 'Superficie protegida',
labels = list(style = list(color = 'black')),
dataLabels = list(enabled = TRUE),
color = list(
linearGradient = list(x1 = 0, x2 = 1,
y1 = 0, y2 = 0),
stops = list(
list(0, color_low),
list(1, color_high)
)
),
showInLegend = FALSE
) %>%
hc_tooltip(
useHTML = TRUE,
formatter = JS("function() {
return this.point.hover_text;
}")
)%>%
hc_plotOptions(series = list(animation = TRUE))%>%
hc_exporting(enabled = TRUE)
hc_map
# %>%
# hc_caption(
#   text = '<span style="font-size: 14px;">Zoom</span> <span style="font-size: 26px;">&#11021;</span>',
#   style = list(color = "black", fontWeight='bold'),
#   align = "center",
#   verticalAlign = "bottom",
#   y = -80,
#   x=-370
# )
# hc_navigator(enabled = TRUE,
#            xAxis = list(
#              labels = list(enabled = FALSE),
#              title = list(text = "Zoom")
#            )
#
#            )%>%
saveWidget(as_widget(hc_map), "plt-mapcanp.html")
# categoriaspentidad <- entidades_anp %>%
#   group_by(entidad_federativa, categoria_manejo) %>%
#   summarise(conteo = n(),
#             suma_superficie = sum(suma_superficie_dentro_entidad),
#             .groups = 'drop') %>%
#   arrange(entidad_federativa, categoria_manejo)
# categoria_manejo <- aggregate(suma_superficie_dentro_entidad ~ categoria_manejo,
#                               data = entidades_anp,
#                               FUN = sum)
#
# resumen_ordenado <- categoria_manejo[order(categoria_manejo$suma_superficie_dentro_entidad), ]
library(sf)
mex_map <- st_read("data/shapefiles/destdv1gw.shp")
cve_edos <- sprintf("%02d", 1:32)
#cve_edos<- paste0("0", cve_edos)
entidades_anp$CVE_EDO <- cve_edos
#write.csv(total_entidades, "total_anp_edos.csv")
mex_map_anp <- mex_map %>%
left_join(entidades_anp)
#head(mex_map_anp)
# Convertir a GeoJSON
mex_geojson <- st_as_sf(mex_map_anp) %>%
st_transform(crs = 4326) %>%
st_write(., "mex_map_anp.geojson", driver = "GeoJSON", delete_dsn = TRUE)
mex_geojson_text <- readLines("mex_map_anp.geojson") %>%
paste(collapse = "\n")
data_sup <- mex_geojson |>
select(code = entity) |>
mutate(value = 1e5 * abs(rt(nrow(mex_geojson), df = 10)))
#mapdata <- get_data_from_map(download_map_data("countries/mx/mx-all"))
#mapdata=mapdata[-1,]
data_mexico <- entidades_anp %>%
select(Entidad = entity, surface_entity)# %>% , num_anp
#mutate(ANP = num_anp
#  )
data_mexico <- entidades_anp %>%
mutate(entity = ifelse(entity == "Ciudad de México", "Distrito Federal", entity)) %>%
select(Entidad = entity, surface_entity)#, num_anp
#glimpse(data_mexico)
data_mexico$hover_text <- paste("<b>",data_mexico$Entidad,"</b>",
"cuenta con", "<b>",data_mexico$num_anp,"</b>", "ANP,"
,"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;con una superficie terrestre total de",
"<b>", scales::comma(data_mexico$total),"</b>","ha"
)
#df1 = select(resumen_ordenado, name, y, hover_text)
hc_mapmex<-hcmap("countries/mx/mx-all",
data = data_mexico,
value = "surface_entity",
joinBy = c("woe-name", "Entidad"),
name ="<span style=\"font-size: 12px\">Superficie protegida</span>",
dataLabels = list(enabled = TRUE,
format = '{point.name}'),
borderColor = "white", borderWidth = 0.5,
tooltip = list(
valueDecimals = 0,
valuePrefix = "<br>Superficie:", valueSuffix = " ha",
useHTML = TRUE,
pointFormat = '{point.hover_text}'
)
) %>%
hc_mapNavigation(enabled = TRUE) %>%
hc_title(text="",
align = "center",
style = list(color = "#000000",
fontWeight = "bold"))%>%
hc_colorAxis(
minColor = "#B4EEB4",
maxColor = "#2A6C5C",
title = list(
text = "Superficie en hectáreas<br>(M: Millones)",
style = list(
color = "black",
fontSize = '14px'
)
)) %>%
hc_credits(enabled =FALSE)%>%
hc_exporting(enabled = TRUE)
hc_mapmex
saveWidget(as_widget(hc_mapmex), "anp_charts/plt-mapmxanp.html")
hc_mapmex<-hcmap("countries/mx/mx-all",
data = data_mexico,
value = "surface_entity",
joinBy = c("woe-name", "Entidad"),
name ="<span style=\"font-size: 12px\">Superficie protegida</span>",
dataLabels = list(enabled = TRUE,
format = '{point.name}'),
borderColor = "white", borderWidth = 0.5,
tooltip = list(
valueDecimals = 0,
valuePrefix = "<br>Superficie:", valueSuffix = " ha",
useHTML = TRUE,
pointFormat = '{point.hover_text}'
)
) %>%
hc_mapNavigation(enabled = TRUE) %>%
hc_title(text="",
align = "center",
style = list(color = "#000000",
fontWeight = "bold"))%>%
hc_colorAxis(
minColor = "#B4EEB4",
maxColor = "#2A6C5C",
title = list(
text = "Superficie en hectáreas<br>(M: Millones)",
style = list(
color = "black",
fontSize = '14px'
)
)) %>%
hc_credits(enabled =FALSE)%>%
hc_exporting(enabled = TRUE)
hc_mapmex
saveWidget(as_widget(hc_mapmex), "anp_charts/plt-mapmxanp.html")
