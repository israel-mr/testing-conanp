ungroup()
df_bubble$region_conanp <- as.factor(df_bubble$region_conanp)
propiedad_social <- c("Ejido (Tierras de Uso Común)",
"Comunidad  (Bienes comunales)",
"Ejido  (Parcela)",
"Comunidad",
"Ejido (Tierras de Uso Común y Parcelas)"
)
propiedad_privada <- c("Persona física", "Persona moral",
"Empresa de Participación Estatal")
propiedad_publica <- c("Público Municipal",
"Público Federal",
"Público Estatal")
df_advc <- df_advc %>%
mutate(
categoria_propiedad = case_when(
tipo_propietario %in% propiedad_social ~ "Propiedad social",
tipo_propietario %in% propiedad_privada ~ "Propiedad privada",
tipo_propietario %in% propiedad_publica ~ "Propiedad publica",
TRUE ~ "Propiedad social"
)
)
library(rbokeh)
df_advc$categoria_propiedad <- as.factor(df_advc$categoria_propiedad)
total_superficie =  sum(df_advc$superficie_certificada)
df_propiedad <- df_advc %>%
group_by(categoria_propiedad) %>%
summarise(Count = n(),
superficie = sum(superficie_certificada),
porc_propiedad = round(sum(superficie_certificada)/total_superficie*100,2)
) %>%
ungroup()
#df_advc[df_advc$categoria_propiedad =="Propiedad_social",]
ecosistema <-c("<span style=\"font-size: 9px\"> <b>Selva perennifolia</span></b>",
"<span style=\"font-size: 9px\"> <b>Bosque de pino</span></b>",
"<span style=\"font-size: 9px\"> <b>Matorral</span></b>",
"<span style=\"font-size: 9px\"> <b>Bosque de encino</span></b>",
"<span style=\"font-size: 9px\"> <b>Selva caducifolia</span></b>",
"<span style=\"font-size: 9px\"> <b>Bosque mesófilo de montaña</span></b>",
"<span style=\"font-size: 9px\"> <b>Agroecosistemas</span></b>",
"<span style=\"font-size: 9px\"> <b>Pastizal</span></b>",
"<span style=\"font-size: 9px\"> <b>Otros tipos de vegetación</span></b>",
"<span style=\"font-size: 9px\"> <b>Manglar</span></b>",
"<span style=\"font-size: 9px\"> <b>Vegetación hidrófila</span></b>"
)
porcentaje_protegido = c(44.63,17.25,7.96,6.86,6.49,6.28,4.37,4.16,1.75,0.14,0.11)
color = c("#2E8B57",
"#548B54",
"#CDAF95",
"#7CCD7C",
"#B4EEB4",
"#BCEE68",
"#CDAA7D",
"gray"
)
color =c(      "#155e29", "#107631",
"#008f39", "#48a259",
"#179740", "#259f48",
"#31a84f", "#70b578",
"#93C799", "#A7D1AC",
"#CAE4CD"
)
df_ecosistema <- data.frame(name = ecosistema,
y=porcentaje_protegido,
color = color
)
#card(
#  full_screen = TRUE,
#)
highchart() %>%
# hc_title(text = 'Fruits pie') %>%
#hc_subtitle(text = 'My favourite fruits') %>%
hc_chart(type = 'pie',
polar = FALSE,
inverted = FALSE) %>%
hc_xAxis(categories = df_ecosistema$name) %>%
hc_add_series(df_ecosistema, name = 'Fruits', showInLegend = TRUE,
dataLabels =list(enabled =TRUE,
format = '{point.name}: {point.percentage:.1f}%'
)
) %>%
hc_plotOptions(series = list(animation = TRUE),
pie = list(
ignoreHiddenPoint = FALSE,
animation = TRUE
))
# %>%
#     hc_tooltip(
#      useHTML =TRUE,
#      pointFormat ='{point.hover_text}'
#    )
ecosistema <-c("<span style=\"font-size: 9px\"> <b>Selva perennifolia</span></b>",
"<span style=\"font-size: 9px\"> <b>Bosque de pino</span></b>",
"<span style=\"font-size: 9px\"> <b>Matorral</span></b>",
"<span style=\"font-size: 9px\"> <b>Bosque de encino</span></b>",
"<span style=\"font-size: 9px\"> <b>Selva caducifolia</span></b>",
"<span style=\"font-size: 9px\"> <b>Bosque mesófilo de montaña</span></b>",
"<span style=\"font-size: 9px\"> <b>Agroecosistemas</span></b>",
"<span style=\"font-size: 9px\"> <b>Pastizal</span></b>",
"<span style=\"font-size: 9px\"> <b>Otros tipos de vegetación</span></b>",
"<span style=\"font-size: 9px\"> <b>Manglar</span></b>",
"<span style=\"font-size: 9px\"> <b>Vegetación hidrófila</span></b>"
)
porcentaje_protegido = c(44.55,17.77,7.68,6.62,6.88,6.22,4.27,4.07,1.69,0.14,0.11)
color = c("#2E8B57",
"#548B54",
"#CDAF95",
"#7CCD7C",
"#B4EEB4",
"#BCEE68",
"#CDAA7D",
"gray"
)
color =c(      "#155e29", "#107631",
"#008f39", "#48a259",
"#179740", "#259f48",
"#31a84f", "#70b578",
"#93C799", "#A7D1AC",
"#CAE4CD"
)
df_ecosistema <- data.frame(name = ecosistema,
y=porcentaje_protegido,
color = color
)
#card(
#  full_screen = TRUE,
#)
highchart() %>%
# hc_title(text = 'Fruits pie') %>%
#hc_subtitle(text = 'My favourite fruits') %>%
hc_chart(type = 'pie',
polar = FALSE,
inverted = FALSE) %>%
hc_xAxis(categories = df_ecosistema$name) %>%
hc_add_series(df_ecosistema, name = 'Fruits', showInLegend = TRUE,
dataLabels =list(enabled =TRUE,
format = '{point.name}: {point.percentage:.1f}%'
)
) %>%
hc_plotOptions(series = list(animation = TRUE),
pie = list(
ignoreHiddenPoint = FALSE,
animation = TRUE
))
# %>%
#     hc_tooltip(
#      useHTML =TRUE,
#      pointFormat ='{point.hover_text}'
#    )
#library(lubridate)
# df_ecosistema$hover_text <-paste("Actualmente cuenta con <b>", sup_certificada$num_ADVC, " </b> ADVC",
#                                    "<br>Porcentaje del total protegido por ADVC <b>", sup_certificada$y, "</b> %",
#                                    "<br>Superficie protegida:<b>", scales::comma(sup_certificada$superficie), "</b>ha")
highchart() %>%
hc_chart(type = 'bar', polar = TRUE) %>%
hc_xAxis(categories = df_ecosistema$name) %>%
hc_add_series(df_ecosistema, name = 'Porcentaje protegido',
dataLabels = list(enabled = TRUE,
format = '{point.y:.1f} %',
position_dodge = "outside",
align = 'left'#,
#alignTo = 'plotEdges'
),
showInLegend = FALSE ) %>%
hc_exporting(enabled = TRUE) %>%
hc_pane(endAngle = 270) %>%
hc_plotOptions(series = list(animation = TRUE,
pointWidth = 22))
df_cert_year <- df_advc %>%
group_by(certification_year) %>%
summarise(count = n(),
total_superficie = sum(superficie_certificada, na.rm = TRUE),
.groups = 'drop')
sup_certificada = data.frame(
tipo_propiedad =c("<span style=\"font-size: 12px\"> <b>Social</span></b>",
"<span style=\"font-size: 12px\"> <b>Privada</span></b>",
"<span style=\"font-size: 12px\"> <b>Pública</span></b>"),
num_ADVC = c(405,180,10),
superficie = c("1,090,112.44","98,201.03", "4,695.07"),
porc_cert=c(91.38,8.23,0.39)
)
tot =  1193008.54 #1137650.30
#sup_certificada$porc_certif =  round((sup_certificada$superficie/tot)*100,5)
sum(409,177,10)
total_superficie
df_propiedad
sum(df_propiedad$superficie)
# df_advc <- read_csv("C:/Users/israel.monjaraz/OneDrive - Food and Agriculture Organization/Documentos/DailyTasks/Numeralia/ADVC/data/datasets/update_30sept024.csv",
# show_col_types = FALSE)
df_advc <- read_csv("C:/Users/israel.monjaraz/OneDrive - Food and Agriculture Organization/Documentos/DailyTasks/Numeralia/ADVC/data/datasets/update598-30sept.csv",
show_col_types = FALSE)
df_advc <- df_advc %>%
mutate(
categoria_propiedad = case_when(
tipo_propietario %in% propiedad_social ~ "Propiedad_social",
tipo_propietario %in% propiedad_privada ~ "Propiedad_privada",
tipo_propietario %in% propiedad_publica ~ "Propiedad_publica",
TRUE ~ "Propiedad_social"
)
)
library(dplyr)
library(tidyr)
# Definir el orden específico de los estados
orden_estados <- c("Oaxaca", "Campeche", "Guerrero", "Sonora", "Coahuila",
"Chihuahua", "Baja California", "Quintana Roo", "San Luis Potosí", "Nuevo León")
df_filtered <- df_advc %>%
filter(estado %in% orden_estados)
df_count <- df_filtered %>%
group_by(estado, categoria_propiedad) %>%
summarise(num_advc = n(),
superficie=sum(superficie_certificada),
.groups = 'drop') %>%
pivot_wider(names_from = categoria_propiedad, values_from = superficie, values_fill = list(superficie = 0))
df_count <- df_count %>%
rename(
name = estado,
Propiedad_social = `Propiedad_social`,
Propiedad_privada = `Propiedad_privada`,
Propiedad_publica = `Propiedad_publica`
) %>%
mutate(name = factor(name, levels = orden_estados))
# Ordenar el dataframe según el factor
df_count <- df_count %>%
arrange(name)
library(highcharter)
hc_surf_state <- highchart() %>%
hc_title(text = '') %>%
hc_yAxis(title = list(text = "(Conteo)")) %>%
hc_xAxis(categories = df_count$name,
title = list(text = ""),
reversed = TRUE) %>%
hc_add_series(name = 'Propiedad_social',
data = df_count$Propiedad_social,
type = 'bar',
color = "#123757",
stack = 'total') %>%
hc_add_series(name = 'Propiedad_privada',
data = df_count$Propiedad_privada,
type = 'bar',
color = "#B53C0D",
stack = 'total') %>%
hc_add_series(name = 'Propiedad_publica',
data = df_count$Propiedad_publica,
type = 'bar',
color = "#CEBA92",
stack = 'total') %>%
hc_tooltip(useHTML = TRUE,
formatter = JS("function() {
return '<b>' + this.x + '</b><br/>' +
'Propiedad_social: ' + this.points[0].y + '<br/>' +
'Propiedad_privada: ' + this.points[1].y + '<br/>' +
'Propiedad_publica: ' + this.points[2].y;
}")) %>%
hc_plotOptions(series = list(
dataLabels = list(enabled = TRUE),
showInLegend = TRUE,
stacking = 'normal'
)) %>%
hc_exporting(enabled = TRUE)
orden_estados <- c("Oaxaca", "Campeche", "Guerrero", "Sonora", "Coahuila",
"Chihuahua", "Baja California", "Quintana Roo", "San Luis Potosí", "Nuevo León")
df_filtered <- df_advc %>%
filter(estado %in% orden_estados)
# Agrupar por estado y categoria_propiedad y tomar la superficie acumulada por categoria_propiedad
df_count <- df_filtered %>%
group_by(estado, categoria_propiedad) %>%
summarise(num_advc = n(),
superficie = sum(superficie_certificada),
.groups = 'drop')
# Calcular la superficie total por entidad
df_total_superficie <- df_count %>%
group_by(estado) %>%
summarise(superficie_total = sum(superficie)) %>%
arrange(desc(superficie_total))
# Unir con el dataframe original para obtener el orden correcto
df_count <- df_count %>%
inner_join(df_total_superficie, by = "estado") %>%
arrange(desc(superficie_total), estado)
# Renombrar columnas
df_count <- df_count %>%
rename(
entidad = estado,
propiedad = categoria_propiedad
)
# Añadir columna de texto de hover
df_count <- df_count %>%
mutate(hover_text = paste("<b>", entidad,
"<br></b> Cuenta con un total de <b>",
scales::comma(superficie_total),
"</b> ha. <br>De las cuales la <b>",
gsub("_", " ", propiedad), "</b> tiene certificadas <b>",
scales::comma(superficie), "</b> ha, <br>distribuidas en <b>",
num_advc, "</b> ADVC.<b>"
))
series_data <- df_count %>%
group_by(propiedad) %>%
summarise(data = list(
list_parse(
tibble(
y = superficie,
hover_text = hover_text
)
)
))
propiedad_social <- df_count %>%
filter(propiedad == "Propiedad_social")
propiedad_privada <- df_count %>%
filter(propiedad == "Propiedad_privada")
propiedad_publica <- df_count %>%
filter(propiedad == "Propiedad_publica")
# Crear el gráfico
hc_surf_state <- highchart() %>%
hc_yAxis(title = list(text = "(Hectáreas)")) %>%
hc_xAxis(categories = unique(df_count$entidad),
title = list(text = ""),
reversed = TRUE) %>%
hc_add_series(name = 'Propiedad pública',
data = propiedad_publica,
#series_data$data[series_data$propiedad == 'Propiedad_publica'][[1]],
type = 'bar',
color = "#CEBA92",
stack = 'total') %>%
hc_add_series(name = 'Propiedad privada',
data = propiedad_privada,
#series_data$data[series_data$propiedad == 'Propiedad_privada'][[1]],
type = 'bar',
color = "#B53C0D",
stack = 'total') %>%
hc_add_series(name = 'Propiedad social',
data = propiedad_social,
#series_data$data[series_data$propiedad == 'Propiedad_social'][[1]],
type = 'bar',
color = "#123757",
stack = 'total') %>%
hc_tooltip(useHTML = TRUE,
formatter = JS("function() { return this.point.hover_text; }")
) %>%
hc_plotOptions(series = list(
dataLabels = list(enabled = FALSE),
showInLegend = TRUE,
stacking = 'normal',
pointWidth = 25
)) %>%
hc_exporting(enabled = TRUE)
#este ya funciona bi
df_count$propiedad <- gsub("_", " ", df_count$propiedad)
#df_count$propiedad <- gsub("u", "ú", df_count$propiedad[df_count$propiedad=="Propiedad publica",] )
hc <- df_count %>%
hchart(
'bar', hcaes(x = 'entidad', y = 'superficie', group = 'propiedad'),
stacking = "normal"
) %>%
hc_colors(c("#B53C0D", "#CEBA92", "#123757")) %>%
hc_tooltip(useHTML = TRUE,
formatter = JS("function() { return this.point.hover_text; }")
)%>%
hc_yAxis(title = list(text = "Superficie en hectáreas (k: miles)"),
reversedStacks =TRUE
)%>%
hc_xAxis(#categories = unique(df_count$entidad),
title = list(text = ""),
reversed = TRUE)%>%
hc_plotOptions(series = list(
dataLabels = list(enabled = FALSE),
showInLegend = TRUE,
pointWidth = 25
))%>%
hc_legend(reversedOrder = FALSE)%>%
hc_exporting(enabled = TRUE)
hc
df_cert_year <- df_advc %>%
group_by(certification_year) %>%
summarise(count = n(),
total_superficie = sum(superficie_certificada, na.rm = TRUE),
.groups = 'drop')
sup_certificada = data.frame(
tipo_propiedad =c("<span style=\"font-size: 12px\"> <b>Social</span></b>",
"<span style=\"font-size: 12px\"> <b>Privada</span></b>",
"<span style=\"font-size: 12px\"> <b>Pública</span></b>"),
num_ADVC = csum(409,177,12),
superficie = c("1,131,175.24","95,317.46", "6,702.99"),
porc_cert=c(91.38,8.23,0.39)
)
df_count
#manejar superficies sin traslape para sumar
sup_nacional_terrestre = 196437500.00
sup_nacional_marina =314992000.00
advc =c(598,1233195.69,29)
porc_ter = round(sum(tot_superficies$superficie_t_total)/sup_nacional_terrestre*100,2)
library(highcharter)
library(dplyr)
#export graphs
#library(htmlwidgets)
library(RPostgres)
con <- dbConnect(
RPostgres::Postgres(),
dbname = "sub_monitoreo",
host = "localhost",
port = 5432,
user = "postgres",
password = "monitoreo2024"
)
tables = dbListTables(con)
df_anp <- dbGetQuery(con, "SELECT * FROM anp")
tot_superficies <- df_anp %>%
group_by(id_superficie) %>%
summarise(
num_anp = n(),
superficie_t_total = sum(superficie_terrestre, na.rm = TRUE),
superficie_m_total = sum(superficie_marina, na.rm = TRUE)
) # este estoy usando
#
# total_anp <- data.frame(
#   tipo_superficie = c(1,2),
#   superficie_total = c(
#     sum(tot_superficies$superficie_t_total),
#     sum(tot_superficies$superficie_m_total),
#
#   )
# )
#manejar superficies sin traslape para sumar
sup_nacional_terrestre = 196437500.00
sup_nacional_marina =314992000.00
advc =c(598,1233195.69,29)
porc_ter = round(sum(tot_superficies$superficie_t_total)/sup_nacional_terrestre*100,2)
porc_mar = round(sum(tot_superficies$superficie_m_total)/sup_nacional_marina*100,2)
info_simec <- data.frame(
Tipo = c("ANP decretadas", "ADVC certificadas"),
Superficie = c(sum(df_anp$superficie_total),  advc[2]),
Porcentajes= c(
round(sum(porc_mar,porc_ter),3),
round(advc[2]/sup_nacional_terrestre*100,2)),
Porcentaje_Territorio = c(porc_ter,porc_mar),
Porcentaje_ficticio = c(90, 10)
)
colores = c("#3E7C24", "#8e44ad","#CEBA92","#B53C0D",  "#123757")
nota_anp <- paste0("Representa un <b>",
info_simec$Porcentajes[1],"%</b> de la superficie nacional,",
" del cual<br> <b>",info_simec$Porcentaje_Territorio[1],"%</b> corresponde al medio terrestre y <b>",info_simec$Porcentaje_Territorio[2],"%</b> al medio marino.")
nota_advc <- paste0("Representa un <b>",
info_simec$Porcentajes[2],
"% </b>de la superficie terrestre nacional,<br> en <b>",advc[3],"</b> entidades federativas")
notas <- c(nota_anp, nota_advc)
df <- data.frame(
name = c("ANP Decretadas", "ADVC Certificadas"),
r = c(info_simec$Superficie[1],  info_simec$Superficie[2]),
y = c(90, 10)
)
# correct
df$note <- notas
df <- df %>% mutate(y_formatted = format(y, big.mark = ","))
df <- df %>% mutate(r_formatted = format(r, big.mark = ","))
info_simec_plot <- highchart()
info_simec_plot <- info_simec_plot %>%
#hc_title(text = "Áreas Naturales Protegidas (ANP) de competencia de la Federación") %>%
# hc_subtitle(text = "Actualización: Junio 2024") %>%
hc_chart(
type = 'pie',
polar = FALSE ,
inverted = FALSE,
options3d = list(
enabled = TRUE,
alpha = 20,
beta = 5 #0
)
) %>%
hc_plotOptions(
pie = list(
innerSize = '50%',
depth = 25,
startAngle = 160,
dataLabels = list(
enabled = TRUE,
format = '{point.name}: {point.r_formatted} ha',
style = list(color = '#000000', fontSize = '15px')
)
)
) %>%
hc_xAxis(categories = df$name) %>%
hc_add_series(
name = 'Superficie',
data = df,
colorByPoint = TRUE,
colors = colores,
showInLegend = TRUE,
tooltip = list(
pointFormat = '{point.note}',
headerFormat = ''
)
) %>%
hc_tooltip(
useHTML = TRUE,
headerFormat = '<span style="font-size: 45px">{point.key}</span><br/>',
pointFormat = '{point.note}'
) %>%
hc_exporting(enabled = FALSE) %>%
hc_credits(enabled=TRUE,
fontsize = "14px",
text="Actualizado: Septiembre 2024",
href = "",
style= list(fontSize="14px"),
position = list(
align = 'left',
x = 0,
y = -10
)
)%>%
hc_plotOptions(series = list(animation = FALSE)) %>%
hc_legend(enabled = FALSE)
info_simec_plot
#saveWidget(as_widget(info_simec_plot), "plot-infosimec.html")
total_entidades
