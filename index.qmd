---
format: html
---

<p><h2 font-size: 28px; align ='center'><br><b>Áreas Naturales Protegidas Federales <br>según su categoría de manejo</br></br></b></h2></p>


<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  overflow:hidden;padding:10px 5px;word-break:normal;}
.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg .tg-t7k0{border-color:#efefef;color:#333;text-align:left;vertical-align:top}
.tg .tg-w6io{background-color:#E60000;border-color:#efefef;color:#FFF;font-family:Arial, Helvetica, sans-serif !important;
  font-weight:bold;text-align:center;vertical-align:top}
.tg .tg-60gh{background-color:#A87000;border-color:#efefef;color:#FFF;font-weight:bold;text-align:center;vertical-align:top}
.tg .tg-ly6r{border-color:#efefef;text-align:left;vertical-align:top}
.tg .tg-3i4j{border-color:#efefef;font-family:Arial, Helvetica, sans-serif !important;text-align:left;vertical-align:top}
.tg .tg-qoxt{background-color:#ABCD66;border-color:#efefef;color:#FFF;font-weight:bold;text-align:center;vertical-align:top}
.tg .tg-hvfa{background-color:#BCB800;border-color:#efefef;color:#FFF;font-weight:bold;text-align:center;vertical-align:top}
.tg .tg-4icx{background-color:#FFBE3B;border-color:#efefef;color:#FFF;font-weight:bold;text-align:center;vertical-align:top}
.tg .tg-qfl9{background-color:#3166FF;border-color:#efefef;color:#FFF;font-family:Arial, Helvetica, sans-serif !important;
  font-weight:bold;text-align:center;vertical-align:top}
</style>
<div style = "display: flex; justify-content:center;">
<table class="tg"><thead>
  <tr>
    <th class="tg-qoxt">RB</th>
    <th class="tg-ly6r">Reservas de la Biosfera </th>
    <th class="tg-60gh">PN</th>
    <th class="tg-t7k0">Parques Nacionales</th>
    <th class="tg-w6io">MN</th>
    <th class="tg-3i4j">Monumentos Naturales</th>
  </tr></thead>
<tbody>
  <tr>
    <td class="tg-hvfa">APRN</td>
    <td class="tg-t7k0">Áreas de Protección de Recursos Naturales</td>
    <td class="tg-4icx">APFF</td>
    <td class="tg-ly6r">Áreas de Protección de Flora y Fauna</td>
    <td class="tg-qfl9">SANT</td>
    <td class="tg-3i4j">Santuarios</td>
  </tr>
</tbody>
</table>
</div>

<br>


```{r echo=FALSE, message=FALSE, warning=FALSE}
#library
rm(list=ls())
library(tidyverse)
library(sf)
library(maps)
library(dplyr)
library(highcharter)
library(plotly)
library(ggplot2)

cols_sig = c("#a87000", "#ffbe3b","#abcd66","#3166ff","#bcb800","#e60000")
#cols_sig2 = c("#EEA109", "#F9D285","#BEFC43","#9DAFE8","#F3F374","#FA9292")
cols_ident = c("#3E7C24", "#8e44ad","#CEBA92","#B53C0D",  "#123757")

library(scales)
library(htmlwidgets)
```


```{r echo=FALSE, include=FALSE}
library(RPostgres)


con <- dbConnect(
  RPostgres::Postgres(),
  dbname = "sub_monitoreo",   
  host = "localhost",                     
  port = 5432,  
  user = "postgres", 
  password = "monitoreo2024"
)

tables = dbListTables(con)


df_anp <- dbGetQuery(con, "SELECT * FROM anp")
df_region <- dbGetQuery(con, "SELECT * FROM region")
df_catmanejo <- dbGetQuery(con, "SELECT * FROM cat_manejo")



#write_excel_csv(df_anp,"datos_anp30sept24.xlsx")
```


```{r echo=FALSE}
#dataset
# manejo <- data.frame(
#   Categoria = c("APFF", "APRN", "MN", "PN", "RB", "SANT", "ADVC"),
#   Numero = c(54, 13, 5, 78, 48, 28, 581),
#   Superficie = c("7,469,180", "4,563,474", "16,269", "17,569,683", "64,033,711", "155,488", "1,137,650"),
#   Porcentaje = c(7.96, 4.86, 0.02, 18.73, 68.26, 0.17, 0.58)
# )
 
```




```{r include=FALSE}
# categorias de manejo
library(dplyr)

summary_catmanejo <- df_anp %>%
  left_join(df_catmanejo, by = "id_catmanejo") %>%  
  group_by(abreviatura) %>%   
  summarise(
    num_anp = n(),   
    superficie_total = sum(superficie_total, na.rm = TRUE)   
  ) %>%
  mutate(
    total_superficie = sum(superficie_total),  
    Porcentaje = round((superficie_total / total_superficie) * 100,3)  
  ) %>%
  select(abreviatura, num_anp, superficie_total, Porcentaje)

```


```{r echo=FALSE}
#data manipulation
manejo_filtrado <- summary_catmanejo %>%
  #filter(Categoria != "ADVC") %>%
  arrange(desc(num_anp))


categorias_ordenadas <- c("PN","APFF",  "RB", "SANT", "APRN", "MN")

manejo_filtrado <- manejo_filtrado %>%
   filter(abreviatura %in% categorias_ordenadas) 

manejo_filtrado$abreviatura <- factor(manejo_filtrado$abreviatura, 
                                    levels = categorias_ordenadas)



manejo_filtrado <- manejo_filtrado %>%
  mutate(color = cols_sig[abreviatura]#,
        # color2 =cols_sig2[Categoria]
         )

data_numero_anp <- manejo_filtrado %>%
  arrange(match(abreviatura, categorias_ordenadas)) %>%
  mutate(color = cols_sig) %>%
  select(num_anp, color, superficie_total)

data_numero_anp <- lapply(1:nrow(data_numero_anp), function(i) {
  list(y = data_numero_anp$num_anp[i],
       color = data_numero_anp$color[i],
       superficie = data_numero_anp$superficie_total[i])
})
```



```{r echo=FALSE}
hc <- highchart() %>%
  hc_chart(type = "column") %>%
  hc_xAxis(
    categories = manejo_filtrado$abreviatura,
           labels = list(style = list(color = 'black'))

  
  # hc_xAxis(categories = c("Parque Nacional",
  #                           "Área de Protección de Flora y Fauna",
  #                           "Área de Protección de Recursos Naturales",
  #                           "Monumento Natural", "Reservas de la Biosfera", "Santuarios"),
  #          labels = list(style = list(color = 'black', fontSize = '13px'))

 )%>%
  hc_yAxis_multiples(
    list(
      min = 0,
      title = list(text = "Número de ANP",
                   style = list(color = 'black', fontSize = '12px')),
      labels = list(style = list(color = 'black', fontSize = '10px'))
    ), 
    list(
      title = list(text = "Porcentaje protegido",
                   style = list(color = 'black', fontSize = '12px')),
      opposite = TRUE,
      labels = list(style = list(color = 'black', fontSize = '10px'))
    )
  ) %>%
  hc_legend(shadow = FALSE) %>%
  
  hc_plotOptions(column = list(
    grouping = FALSE,
    shadow = FALSE,
    borderWidth = 0,
    dataLabels = list(
      enabled = TRUE,
      formatter = JS("
        function() {
          if (this.series.name === 'Número de ANP') {
            return this.y + ' ANP';
          }
          return null;
        }
      "),
      style = list(
      color = 'black',
      #textOutline = "none",  # Remove white border around text
      fontSize = '14px'      # Set font size to 14
    )
    )
  ),
  line = list(
    dataLabels = list(
      enabled = TRUE,
      formatter = JS("
        function() {
          if (this.series.name === 'Porcentaje de superficie protegida') {
            return this.y + ' %';
          }
          return null;
        }
      ")
    )
  )) %>%
  
  hc_exporting(enabled = TRUE) %>%
  
  hc_add_series(
    name = "Número de ANP",
    colorByPoint = TRUE,
    data = data_numero_anp,
    pointPadding = 0.1,
    showInLegend = FALSE#,
    #enableMouseTracking = FALSE
  ) %>%
  # hc_add_series(
  #   name = "Porcentaje de superficie protegida",
  #   type = 'line',
  #   color = "gray",
  #   data = manejo_filtrado$Porcentaje,
  #   pointPadding = 0.3,
  #   yAxis = 1,
  #   tooltip = list(valueSuffix = "%"),
  #   marker = list(lineWidth = 2),
  #   lineWidth = 3
  # ) 



hc_add_series(
  name = "Porcentaje de superficie protegida",
  type = 'line',
  color = "gray",
  data = manejo_filtrado$Porcentaje,
  pointPadding = 0.3,
  yAxis = 1,
  tooltip = list(valueSuffix = "%"),
  marker = list(lineWidth = 2),
  lineWidth = 3,
  dataLabels = list(
    enabled = TRUE,
    style = list(
      color = 'black',
      fontSize = '12px'#,
      #textOutline = "none"  # Remove white border around text
    )
  ),
    showInLegend = TRUE
)%>%
  
  hc_tooltip(shared = TRUE, formatter = JS("
    function() {
      var header = '<span style=\"font-size: 11px\"> <b>' + this.x + ' </b></span><br/>';
      var body = this.points.reduce(function (s, point) {
        return s + '<span style=\"color:' + point.color + '\">' + point.series.name + '</span>: <b>' + point.y + '</b><br/>';
      }, '');
      var superficie = this.points[0].point.superficie; // Obtener superficie del primer punto
      var footer = '<span style=\"font-size: 10px\">Con un total de <b> ' + superficie + '</b>  ha protegidas</span>';
      return header + body + footer;
    }
  ")
  
  
  ) 

hc
#saveWidget(as_widget(hc), "plt-numanp.html")

```

```{r eval=FALSE, include=FALSE}
# 
# cols_sig = c("#a87000", "#ffbe3b","#abcd66","#3166ff","#bcb800","#e60000")
# 
# 
# hc <- highchart() %>%
#   hc_chart(type = "column") %>%
#   #hc_title(text = "") %>% #Categoría de Manejo en Áreas Naturales Protegidas
#   
#     # hc_xAxis(categories = c("Parque Nacional", 
#     #                         "Área de Protección de Flora y Fauna", 
#     #                         "Área de Protección de Recursos Naturales",
#     #                         "Monumento Natural", "Reservas de la Biosfera", "Santuarios"),
# 
#   hc_xAxis(categories = manejo_filtrado$Categoria,
#            labels = list(style = list(color = 'black'))
#            ) %>%
#   hc_yAxis_multiples(
#     list(min = 0,
#          title = list(text = "Número de ANP",
#                       style = list(color = 'black', 
#                                    fontSize = '13px'
#                                    ))
#          ), 
#     list(
#       title = list(text = "Porcentaje protegido",
#                    style = list(color = 'black', 
#                                 fontSize = '13px'
#                                 )
#                    ),
#       opposite = TRUE,
#       labels = list(fontSize = "16px")
#     )
#     
#   ) %>%
#   hc_legend(shadow = FALSE) %>%
#   hc_plotOptions(column = list(
#     grouping = FALSE,
#     shadow = FALSE,
#     borderWidth = 0,
#     dataLabels = list(
#       enabled = TRUE
#       ,
#       formatter = JS("
#         function() {
#           if (this.series.name === 'Número de ANP') {
#             return this.y + ' ANP';
#           } else if (this.series.name === 'Porcentaje de superficie protegida') {
#             return this.y + ' %';
#           }
#           return this.y;
#         }
#       ")
#       )
#     )) %>%
#     hc_exporting(enabled = TRUE) %>%
#   hc_add_series(
#     name = "Número de ANP",
#     colorByPoint = TRUE,
#     data = data_numero_anp,#,
#    pointPadding = 0.1,
#    showInLegend = FALSE#,
#    #enableMouseTracking = FALSE
#   ) %>%
#   hc_add_series(
#     name = "Porcentaje de superficie protegida",
#     #type = 'column',
#    color ="gray",
#     data = manejo_filtrado$Porcentaje,
#     pointPadding = 0.4,
#     yAxis = 1,
#    # ,
#    #   tooltip = list(
#    #     valueSuffix = "%"  
#    #   ),
#    marker = list(#fillColor = colores_identidad[4], 
#                               lineWidth = 2
#                               #lineColor = NULL
#                  )
#   )%>%
#   hc_tooltip(shared = TRUE, formatter = JS("
#       function() {
#         var header = '<span style=\"font-size: 11px\">' + this.x + '</span><br/>';
#         var body = this.points.reduce(function (s, point) {
#           return s + '<span style=\"color:' + point.color + '\">' + point.series.name + '</span>: <b>' + point.y + '</b><br/>';
#         }, '');
#         var superficie = this.points[0].point.superficie; 
#         var footer = '<span style=\"font-size: 10px\">Con un total de ' + <b> superficie <b> + ' ha protegidas</span>';
#         return header + body + footer;
#       }
#     ")
#   ) 
# 
# hc
# 
# #saveWidget(as_widget(hc), "plt-numanp.html")
# 

```


```{r eval=FALSE, include=FALSE}
# manejo_filtrado$color =cols_sig
# 
# df <-select(manejo_filtrado, Categoria, Numero,Superficie,Porcentaje,color)
# 
# colnames(df)[1] <- "name"
# colnames(df)[2] <- "y"
# 
# #df$Superficie = scales::comma(df$Superficie)
# df <- mutate(df,
#              hover_text = paste("Número de ANP:", y,
#                                 "<br>Superficie protegida: ", "<b>", Porcentaje,"</b>", "%",
#                                 "<br>Con un total de", "<b>", Superficie,"</b>", "ha protegidas"
#              )
# )
# 
# 
# # df$hover_text <- paste("Número de ANP:", df$y,
# #                        "<br>Superficie protegida: ", "<b>",df$Porcentaje,"</b>", "%",
# #                       "<br>Con un total de", "<b>",df$Superficie,"</b>", "ha protegidas"
# #                    
# # )
# 
# hc0 <- highchart() %>%
#   hc_chart(type = "column") %>%
#   hc_xAxis(categories = df$name,
#            labels = list(style = list(color = 'black'))
#   ) %>%
#   hc_yAxis_multiples(
#     list(min = 0,
#          title = list(text = "Número de ANP",
#                       style = list(color = 'black', 
#                                    fontSize = '13px')
#          )
#     )
#     ) %>%
#   hc_legend(shadow = FALSE) %>%
#   hc_plotOptions(
#     column = list(
#       grouping = FALSE,
#       shadow = FALSE,
#       borderWidth = 0,
#       dataLabels = list(
#         enabled = TRUE
#       ),
#       colorByPoint = TRUE,  
#       colors = cols_sig,   
#       series = list(
#         states = list(
#           hover = list(
#             brightness = -0.1    
#           )
#         )
#       ),
#       states = list(
#         hover = list(
#           brightness = -0.1    
#         )
#       )
#     )
#   ) %>%
#   hc_exporting(enabled = TRUE) %>%
#   hc_add_series(df, name = "Número de ANP",
#     colorByPoint = TRUE,
#    # data = data_numero_anp,
#     pointPadding = 0.1,
#     showInLegend = FALSE
#    ) %>%
#   hc_tooltip(
#     useHTML = TRUE,
#     pointFormat = '{point.hover_text}' )
# 
# 
# hc00 <- highchart() %>%
#   hc_chart(type = "column") %>%
#   hc_xAxis(categories = df$name,
#            labels = list(style = list(color = 'black'))
#   ) %>%
#   hc_yAxis_multiples(
#     list(min = 0,
#          title = list(text = "Número de ANP",
#                       style = list(color = 'black', 
#                                    fontSize = '13px')
#          )
#     )
#     ) %>%
#   hc_legend(shadow = FALSE) %>%
#   hc_plotOptions(
#     column = list(
#       grouping = FALSE,
#       shadow = FALSE,
#       borderWidth = 0,
#       dataLabels = list(
#         enabled = TRUE
#       ),
#       colorByPoint = TRUE,  
#       colors = cols_sig,   
#       series = list(
#         states = list(
#           hover = list(
#             brightness = -0.1    
#           )
#         )
#       ),
#       states = list(
#         hover = list(
#           brightness = -0.1    
#         )
#       )
#     )
#   ) %>%
#   hc_exporting(enabled = TRUE) %>%
#   hc_add_series( name = "Porcentaje protegido por ANP",
#     colorByPoint = TRUE,
#    data = df$Porcentaje,
#     pointPadding = 0.1,
#     showInLegend = FALSE
#    ) %>%
#   hc_tooltip(
#     useHTML = TRUE,
#     pointFormat = '{point.hover_text}' )
# 


# 
# html <- '
# <div id="graph-container">
#   <div id="hc0-container" class="chart-container">
#     <div id="hc0" style="height: 400px;"></div>
#   </div>
#   <div id="hc00-container" class="chart-container">
#     <div id="hc00" style="height: 400px;"></div>
#   </div>
# </div>
# <div id="nav-container">
#   <button id="btn-hc0" class="nav-btn">Gráfico 1</button>
#   <button id="btn-hc00" class="nav-btn">Gráfico 2</button>
# </div>
# <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
# <script>
#   $(document).ready(function() {
#     $("#hc00-container").hide(); // Ocultar hc00 inicialmente
#     
#     $("#btn-hc0").click(function() {
#       $("#hc00-container").hide();
#       $("#hc0-container").show();
#     });
#     
#     $("#btn-hc00").click(function() {
#       $("#hc0-container").hide();
#       $("#hc00-container").show();
#     });
#   });
# </script>
# '
# htmltools::HTML(html)
```



<h2 font-size: 28px; align ='center'><br><br><b>Protección del medio terrestre y marino <br>en las ANP Federales</br></b></h2>


```{r echo=FALSE}
resumen_superficies <- df_anp %>%
  group_by(id_superficie) %>%  # Agrupar por id_superficie
  summarise(
    num_anp = n(),  # Contar cuántas ANP tienen ese tipo de superficie
    superficie_t_total = sum(superficie_terrestre, na.rm = TRUE),
    superficie_m_total = sum(superficie_marina, na.rm = TRUE)
  )



# tot_superficies <- df_anp %>%
#   group_by(id_superficie) %>%  
#   summarise(
#     num_anp = n(),  
#     superficie_t_total = sum(superficie_terrestre, na.rm = TRUE),
#     superficie_m_total = sum(superficie_marina, na.rm = TRUE)
#   ) # este estoy usando




```

 


```{r echo=FALSE, message=FALSE, warning=FALSE}
resumen_superficie = resumen_superficies
total_sup = sum(df_anp$superficie_total)
sup_nacional_terrestre = 196437500.00
sup_nacional_marina =314992000.00




ambientes <- data.frame(
  Tipo = c("<span style=\"font-size: 12px\"> <b>Medio terrestre</b></span>", 
          # "<span style=\"font-size: 12px\"> <b>Medio costero marino</b></span>",
         "<span style=\"font-size: 12px\"> <b>Medio marino</b></span>"
           ),
  Superficie = c(round(sum(resumen_superficies$superficie_t_total),3), 
                 round(sum(resumen_superficies$superficie_m_total),3)
                 ),
  
  Porcentaje_ANP = c( round(sum(resumen_superficies$superficie_t_total)/total_sup*100,2),
                      round(round(sum(resumen_superficies$superficie_m_total),3)/total_sup*100,2)),
  
  Porcentaje_Territorio = c(round(sum(resumen_superficies$superficie_t_total)/sup_nacional_terrestre*100,2),
                            round(sum(resumen_superficies$superficie_m_total)/sup_nacional_marina*100,2))
)

notas_terrestres <- paste0("Representa un ", 
                          "<b>",ambientes$Porcentaje_Territorio[1],"%","</b>", 
                          " de la superficie terrestre nacional"
                          )
notas_marinos <- paste0("Representa un ", 
                       "<b>",ambientes$Porcentaje_Territorio[2],"%","</b> de la superficie marina del territorio nacional"
                       )



ambientes$hover_text <- paste(c(
            paste0(notas_terrestres,
                   "<br>Superficie: ",
                   "<b>",scales::comma(ambientes$Superficie[1]),"</b>"," ha", 
                   "<br>Porcentaje del total protegido: ",
                   "<b>",ambientes$Porcentaje_ANP[1],"</b>", "%",
                    "<br>&nbsp;&nbsp;<b>",resumen_superficies$num_anp[1] ," ANP</b> cuentan con superficie exclusivamente terrestre.</b>"
                   
                   
                   ),
            paste0(notas_marinos, 
                   "<br>Superficie: ", 
                   "<b>",scales::comma(ambientes$Superficie[2]),"</b>", " ha",
                   "<br>Porcentaje del total protegido: ",
                   "<b>",ambientes$Porcentaje_ANP[2], "%","</b>",
                  "<br>&nbsp;&nbsp;  <b>",resumen_superficies$num_anp[2] ," ANP</b> cuentan con superficie exclusivamente marina y<br>&nbsp;&nbsp; 
                   <b> ",resumen_superficies$num_anp[3] ," ANP</b> cuentan con una superficie costero-marino</b>"
                   )
)
)

colnames(ambientes)[1] <- "name"
colnames(ambientes)[3] <- "y"
ambientes$color =c("#8C5C47","#4A8CB0")
ambientes$Superficie =scales::comma(ambientes$Superficie)
df <-select(ambientes,  name,y, color, hover_text,r=Superficie)



fig <- highchart() 

fig <- fig %>%
  hc_chart(type = 'pie',
           polar = FALSE,
           inverted = FALSE,
           options3d = list(
             enabled = TRUE,
             alpha = 20,
             beta = 5 #0
    )
           ) %>%
  #hc_xAxis(categories = df$name) %>%
  hc_add_series(df,
                name = 'ambientes',
                showInLegend = TRUE,
                innerSize = '33%',
              dataLabels = list(enabled = TRUE,
                               format = '{point.name}: {point.percentage:.2f}%',
                                style = list(color = '#000000', fontSize = '14px')
)
                ) %>%
  hc_plotOptions(series = list(animation = TRUE),
                 pie = list(
                   ignoreHiddenPoint = FALSE
                   
                 )
                 )%>%
    hc_tooltip(
    useHTML = TRUE,
    pointFormat = '{point.hover_text}'
  )%>%
  hc_exporting(enabled = TRUE) 
fig
```


```{r echo=FALSE, include=FALSE}
# 
# # Datos actualizados con la tercera categoría
# ambientes <- data.frame(
#   Tipo = c("<span style=\"font-size: 12px\"> <b>Medio terrestre</b></span>", 
#            "<span style=\"font-size: 12px\"> <b>Medio costero-marino</b></span>",
#            "<span style=\"font-size: 12px\"> <b>Medio marino</b></span>"
#            ),
#   Superficie = c(23013380.39, 25415271.29, 45379152.67),
#   Porcentaje_ANP = c(24.53, 27.09, 48.37),
#   Porcentaje_Territorio = c(11.71, 8.07, 14.41)
# )
# 
# notas_terrestres <- paste0("Representa un ", 
#                           "<b>", ambientes$Porcentaje_Territorio[1],"%","</b>", 
#                           " de la superficie terrestre nacional"
#                           )
# notas_costeros <- paste0("Representa un ", 
#                         "<b>",ambientes$Porcentaje_Territorio[2],"%","</b>", 
#                         " de la superficie costero-marina nacional"
#                         )
# notas_marinos <- paste0("Representa un ", 
#                        "<b>",ambientes$Porcentaje_Territorio[3],"%","</b>", 
#                        " de la superficie marina del territorio nacional"
#                        )
# 
# ambientes$hover_text <- paste(c(
#             paste0("Cuenta con <b>187 ANP</b> </b>",
#                    "<br>Superficie: ",
#                    "<b>",scales::comma(ambientes$Superficie[1]),"</b>"," ha", 
#                    "<br>Porcentaje del total protegido: ",
#                    "<b>",ambientes$Porcentaje_ANP[1],"</b>", "%<br>",
#                    notas_terrestres
#                    ),
#             paste0("Cuenta con <b>31 ANP</b>.</b>", 
#                    "<br>Superficie: ", 
#                    "<b>",scales::comma(ambientes$Superficie[2]),"</b>", " ha",
#                    "<br>Porcentaje del total protegido: ",
#                    "<b>",ambientes$Porcentaje_ANP[2], "%","</b><br>",
#                    notas_costeros
#                    
#                    ),
#             paste0("Cuenta con <b>8 ANP</b>", 
#                    "<br>Superficie: ", 
#                    "<b>",scales::comma(ambientes$Superficie[3]),"</b>", " ha",
#                    "<br>Porcentaje del total protegido: ",
#                    "<b>",ambientes$Porcentaje_ANP[3], "%","</b><br>",
#                    notas_marinos
#                    
#                    )
# ))
# 
# colnames(ambientes)[1] <- "name"
# colnames(ambientes)[3] <- "y"
# ambientes$color <- c("#8C5C47","#6FA5C3","#4A8CB0")
# ambientes$Superficie <- scales::comma(ambientes$Superficie)
# df <- select(ambientes, name, y, color, hover_text, r = Superficie)
# 
# fig <- highchart() 
# 
# fig <- fig %>%
#   hc_chart(type = 'pie',
#            polar = FALSE,
#            inverted = FALSE,
#            options3d = list(
#              enabled = TRUE,
#              alpha = 20,
#              beta = 5
#     )
#   ) %>%
#   hc_add_series(df,
#                 name = 'Ambientes',
#                 showInLegend = TRUE,
#                 innerSize = '33%',
#                 dataLabels = list(enabled = TRUE,
#                                   format = '{point.name}: {point.percentage:.2f}%',
#                                   style = list(color = '#000000', fontSize = '14px')
#                                   ),
#                 pie = list(ignoreHiddenPoint = FALSE)
#   ) %>%
#   hc_plotOptions(series = list(animation = TRUE),
#                  pie = list(
#     ignoreHiddenPoint = FALSE,  
#       animation = TRUE
#     )
#                  ) %>%
#   hc_tooltip(
#     useHTML = TRUE,
#     pointFormat = '{point.hover_text}'
#   ) %>%
#   hc_exporting(enabled = TRUE)
# 
# fig

```



```{r eval=FALSE, include=FALSE}
# df <- data.frame(
#   name = c("Medio marino", "Medio terrestre"),
#   r = c("70,794,424", "23,013,380"),
#   y = c(75.47, 24.53)
# )
# 
# #df <- df %>% mutate(y_formatted = format(y, big.mark = ","))
# df <- df %>% mutate(r_formatted = format(r, big.mark = ","))
# colores = c("#4A8CB0","#8C5C47")
# 
# prueba_marterr <- highchart()
# 
# prueba_marterr <- prueba_marterr %>%
#   hc_chart(
#     type = 'pie', 
#     polar = FALSE ,  
#     inverted = FALSE,
#     options3d = list(
#       enabled = TRUE,
#       alpha = 20,
#       beta = 20 #0
#     )
#   ) %>%
#   hc_plotOptions(
#     pie = list(
#       innerSize = '50%',  
#       depth = 25, 
#       startAngle = 80)
#   ) %>%
#   hc_xAxis(categories = df$name) %>%
#   hc_add_series(
#     name = 'ambientes',
#     innerSize = '30%',
#     data = list(
#       list(
#         name = 'Medio terrestre',
#         y = df$y[1],
#         r = df$r[1],
#         percentage = df$percentage[1],
#         color ="#8C5C47",
#         dataLabels = list(
#           enabled = TRUE,
#           format = '<b>{point.name}</b> <br> Superficie: {point.r} ha<br>Porcentaje protegido: {point.percentage:.2f} %',
#           distance = -175,
#           style = list(fontWeight = 'bold',fontSize = '18px',  color = 'white', textOutline = 'none')
#         )
#       ),
#       list(
#         name = 'Medio marino',
#         y = df$y[2],
#         r = df$r[2],
#         percentage = df$percentage[2],
#         color ="#4A8CB0",
#         dataLabels = list(
#           enabled = TRUE,
#           format = '<b>{point.name}</b> <br> Superficie: {point.r} ha<br>Porcentaje protegido: {point.percentage:.2f} %',
#           distance = -138,
#           style = list(fontWeight = 'bold', fontSize = '18px', color = 'white', textOutline = 'none')
#         )
#       )
#     )) %>%
#   hc_exporting(enabled = TRUE) %>% 
#   hc_plotOptions(series = list(animation = FALSE)) %>%
#   hc_legend(enabled = FALSE)
# 
# prueba_marterr
# 
# saveWidget(as_widget(prueba_marterr), "plt-protecanp1.html")
# 
# 
# 



```




<h2 font-size: 28px; align ='center'><br><br><b>Protección de tipos de vegetación y uso de suelo <br> en las ANP Federales</br></b> </h2>


```{r echo=FALSE, message=FALSE, warning=FALSE}
tipos_vegetacion <- c("Agroecosistemas", "Bosque de Coníferas", "Bosque de Encino",
                       "Bosque Mesófilo de Montaña", "Manglar", "Matorral Xerófilo",
                       "Otros tipos de vegetación", "Pastizal", "Selva Caducifolia",
                       "Selva Perennifolia", "Vegetación Hidrófila", "Sin Vegetación aparente", "Mar Territorial")
 
superficie_anp <- c(1145131, 2321581, 2481197,
                    284669, 472274, 8007039,
                    1873588, 676975, 1949236,
                    2169652, 764201, 867837, 70794424)
 
porcentaje_anp_federal <- c(1.22, 2.47, 2.64,
                            0.30, 0.50, 8.54,
                            2.00, 0.72, 2.08,
                            2.31, 0.81, 0.93, 75.47)


#vegetacion = read_csv("data/vegetacion_tb.csv", show_col_types = FALSE)
vegetacion <- dbGetQuery(con, "SELECT * FROM vegetacion")




vegetacion$color = rep("#2c3e50", dim(vegetacion)[1])

# vegetacion <- data.frame(
#   Tipos_Vegetacion = tipos_vegetacion,
#   Superficie_ANP = superficie_anp,
#   Porcentaje_ANP_Federal = porcentaje_anp_federal,
#   color = color
# )

 
vegetacion <- vegetacion %>% arrange((superficie)) # desc

df.vegetacion = vegetacion

vegetacion <- vegetacion[c(which(vegetacion$tipo_vegetacion == "Mar Territorial"),
                           setdiff(1:nrow(vegetacion),
                                   which(vegetacion$tipo_vegetacion == "Mar Territorial"))), ]
vegetacion=vegetacion[-1,] 


vegetacion <- vegetacion[order(-vegetacion$superficie), ]
#df = as.data.frame(resumen_ordenado)
#resumen_ordenado <- df[order(df$total), ]

vegetacion$hover_text <- paste("<b>",vegetacion$tipo_vegetacion,"</b>",
  "<br>Superficie en ANP:", "<b>",scales::comma(vegetacion$superficie),"</b>", "ha",# vegetacion$Superficie_ANP,
                               "<br>Porcentaje en ANP Federales:", "<b>",vegetacion$porcentaje,"</b>")



```


```{r echo=FALSE, include=FALSE}


colnames(vegetacion)[2] <- "name"
colnames(vegetacion)[3] <- "y"
colnames(vegetacion)[4] <- "r"
# 
df1 <-select(vegetacion, name, y, hover_text)
# 
# highchart() %>%
#   hc_chart(type = 'bar') %>%
#   hc_xAxis(categories = df1$name) %>%
#     hc_yAxis_multiples(
#     list(
#       min = 0,
#       title = list(text = "Hectáreas (M: Millones)")
#     ))%>%
#   hc_add_series(df1, name = 'Superficie en ANP',
#                 dataLabels = list(enabled = TRUE,
#                                   style = list(fontSize = "12px")
#                                   
#                                   
#                                   ),
#                 color = cols_ident[3],
#                 
#                 
#                 ) %>%
#     hc_tooltip(
#     useHTML = TRUE,
#     pointFormat = '{point.hover_text}'
#   ) %>%
#   hc_plotOptions(series = list(animation = FALSE,
#                                borderRadius = 14,
#                                dataLabels = list(
#                      style = list(
#                        fontSize = "12px"
#                        )
#                      )))%>%
#       hc_exporting(enabled = TRUE) 

 
```


```{r echo=FALSE}

color_high <- '#CDAA7D'
color_low <- '#F4E9D3'



hc3 <- highchart( ) %>%
  hc_chart(type = 'bar') %>%
  hc_xAxis(categories = df1$name,
    labels = list(style = list(color = 'black', 
                               fontSize = '12px')
                  )
    ) %>%
  hc_yAxis_multiples(
    list(
      min = 0,
      max = 9100000, 
      title = list(text = "Total de superficie protegida en hectáreas (M: Millones)",
                   style = list(color = 'black')
                   ),
    labels = list(style = list(color = 'black'))
    )
    ) %>%
  hc_add_series(df1, name = 'Superficie en ANP',
    labels = list(style = list(color = 'black'),
                   title = list(
      style = list(fontSize = "16px", fontWeight = "bold", color = "black")
      )),
                dataLabels = list(enabled = TRUE,
                                  style = list(fontSize = "12px")
                                  ),
                color = list(
                  linearGradient = list(x1 = 0, x2 = 1, y1 = 0, y2 = 0),
                  stops = list(
                    list(0, color_low),
                    list(1, color_high)
                  )
                ),
    showInLegend = FALSE
    ) %>%
  hc_tooltip(
    useHTML = TRUE,
    formatter = JS("function() {
      return this.point.hover_text;
    }")
  ) %>%
  hc_plotOptions(series = list(animation = TRUE
                               #borderRadius = 14
                               )
                 ) %>%
 hc_exporting(
   enabled = TRUE#,
  # buttons = list(
  #   contextButton = list(
  #     align = "center",
  #     verticalAlign = "bottom",
  #     y = -2,
  #     x = 360
  #     )
  #   )
  )
 

hc3

#saveWidget(as_widget(hc3), "plt-protecanp.html")



```









<h2 font-size: 28px; align ='center'><br><br><b>Distribución de la superficie terrestre protegida <br> por entidad federativa</br></b> </h2>

```{r echo=FALSE}
entidades_anp <- read_csv("data/data-entidadesanp.csv",show_col_types = FALSE)
entidades_anp = as.data.frame(entidades_anp)

total_entidades <- entidades_anp %>%
  group_by(entidad_federativa) %>%
  summarise(total = sum(suma_superficie_dentro_entidad),
            num_anp = n()
            )

resumen_ordenado <- total_entidades[order(total_entidades$total), ] #order(-total
df = as.data.frame(resumen_ordenado)
resumen_ordenado <- df[order(-df$total), ]
```

```{r echo=FALSE, fig.dim=c(6,6)}
colnames(resumen_ordenado)[1] <- "name"
colnames(resumen_ordenado)[2] <- "y"

color_high <- cols_ident[1] #'#3E7C24'
color_low <- '#7CCD7C'

resumen_ordenado$hover_text <- paste("<b>", resumen_ordenado$name, "</b>",
                                     "<br> Superficie protegida", 
                                     "<b>",scales::comma(resumen_ordenado$y),"</b>","ha",
                                     "<br>Cuenta con:",
                                     "<b>",resumen_ordenado$num_anp,"</b>", "ANP")
df1 = select(resumen_ordenado, name, y, hover_text)

hc_map<- highchart() %>%
  hc_chart(type = 'bar',
           polar = FALSE,
           inverted =FALSE
           ) %>%
  hc_xAxis(categories = df1$name,
    labels = list(style = list(color = 'black'))
    ) %>%
    hc_yAxis(
         # list(
      # min = 0,
      # max = 3500000,  
      title = list(text = "Total de superficie protegida en hectáreas (M: Millones)",
                   style = list(color = 'black')),
      labels = list(
        max = 3500000,
        formatter = JS("function() { return this.value / 1000000 + 'M'; }"),
        style = list(color = 'black')
     # )
    ))%>%
  hc_add_series(df1, name = 'Superficie protegida',
    labels = list(style = list(color = 'black')),
                dataLabels = list(enabled = TRUE),
                color = list(
                  linearGradient = list(x1 = 0, x2 = 1, 
                                        y1 = 0, y2 = 0),
                  stops = list(
                    list(0, color_low),
                    list(1, color_high)
                  )
                ),
    showInLegend = FALSE
    ) %>%
  hc_tooltip(
    useHTML = TRUE,
    formatter = JS("function() {
      return this.point.hover_text;
    }")
  )%>%
  hc_plotOptions(series = list(animation = TRUE))%>%
  hc_exporting(enabled = TRUE)
hc_map

# %>%
  # hc_caption(
  #   text = '<span style="font-size: 14px;">Zoom</span> <span style="font-size: 26px;">&#11021;</span>',
  #   style = list(color = "black", fontWeight='bold'),
  #   align = "center",
  #   verticalAlign = "bottom",
  #   y = -80,
  #   x=-370
  # )

  # hc_navigator(enabled = TRUE, 
  #            xAxis = list(
  #              labels = list(enabled = FALSE),
  #              title = list(text = "Zoom")
  #            )
  #            
  #            )%>%


saveWidget(as_widget(hc_map), "plt-mapcanp.html")
#saveWidget(hc3, "hc3.html", selfcontained = TRUE)
#webshot("plt-mapcanp.html", file = "hc3.jpg")
```
 





```{r echo=FALSE}
categoriaspentidad <- entidades_anp %>%
  group_by(entidad_federativa, categoria_manejo) %>%
  summarise(conteo = n(),
            suma_superficie = sum(suma_superficie_dentro_entidad),
            .groups = 'drop') %>%
  arrange(entidad_federativa, categoria_manejo)
```




```{r echo=FALSE}
categoria_manejo <- aggregate(suma_superficie_dentro_entidad ~ categoria_manejo, 
                              data = entidades_anp,
                              FUN = sum)

resumen_ordenado <- categoria_manejo[order(categoria_manejo$suma_superficie_dentro_entidad), ]

#cat_manejo_order <- categoria_manejo[order(-categoria_manejo$suma_superficie_dentro_entidad), ] #order(-cate

```






```{r include=FALSE, eval=FALSE}

#<h2 font-size: 28px; align ='center'>Superficie terrestre protegida por Categoría de Manejo</h2>
cols_sig = c("#ffbe3b","#bcb800","#a87000","#e60000","#3166ff","#abcd66")
cols_sig = rev(cols_sig)
data_with_colors <- lapply(seq_along(resumen_ordenado$suma_superficie_dentro_entidad),
                           function(i) {
                             list(y =resumen_ordenado$suma_superficie_dentro_entidad[i],
                                  color = cols_sig[i %% length(cols_sig) + 1])
})

hc <- highchart() %>%
  hc_chart(type = "bar") %>%
  hc_title(text = " ") %>%
  hc_xAxis(categories = resumen_ordenado$categoria_manejo, 
           title = list(text = "Categoría de Manejo")) %>%
  hc_yAxis(title = list(text = "Superficie en hectáreas (M: Millones)")) %>%
  hc_add_series(
    name = "Superficie",
    data = data_with_colors,
    dataLabels = list(
      enabled = TRUE
  ))%>%
  hc_tooltip(
    pointFormat = 'Superficie terrestre: {point.y} ha'
  )%>%
  hc_legend(enabled = FALSE)



```






<h2 font-size: 28px; align ='center'><br><br><b>Distribución de la superficie terrestre protegida<br> por entidad federativa</br></b></h2>



```{r include=FALSE, message=FALSE, warning=FALSE}
library(sf)
mex_map <- st_read("data/shapefiles/destdv1gw.shp")
```


```{r include=FALSE}
cve_edos <- sprintf("%02d", 1:32)
#cve_edos<- paste0("0", cve_edos)
total_entidades$CVE_EDO <- cve_edos
#write.csv(total_entidades, "total_anp_edos.csv")
```
```{r include=FALSE}
mex_map_anp <- mex_map %>%
  left_join(total_entidades)
#head(mex_map_anp)
```



```{r echo=FALSE, include=FALSE}
# Convertir a GeoJSON
mex_geojson <- st_as_sf(mex_map_anp) %>%
  st_transform(crs = 4326) %>%
  st_write(., "mex_map_anp.geojson", driver = "GeoJSON", delete_dsn = TRUE)

mex_geojson_text <- readLines("mex_map_anp.geojson") %>%
  paste(collapse = "\n")
```


```{r echo=FALSE, message=FALSE, warning=FALSE}
data_sup <- mex_geojson |>
  select(code = entidad_federativa) |>
  mutate(value = 1e5 * abs(rt(nrow(mex_geojson), df = 10)))

mapdata <- get_data_from_map(download_map_data("countries/mx/mx-all"))

mapdata=mapdata[-1,]

 

data_mexico <- total_entidades %>% 
  select(Entidad = entidad_federativa, total, num_anp)# %>% 
  #mutate(ANP = num_anp
      #  )

data_mexico <- total_entidades %>%
  mutate(entidad_federativa = ifelse(entidad_federativa == "Ciudad de México", "Distrito Federal", entidad_federativa)) %>%
  select(Entidad = entidad_federativa, total, num_anp)

#glimpse(data_mexico)
```


```{r echo=FALSE, message=FALSE, warning=FALSE}
data_mexico$hover_text <- paste("<b>",data_mexico$Entidad,"</b>",
                                "cuenta con", "<b>",data_mexico$num_anp,"</b>", "ANP,"
                                ,"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;con una superficie terrestre total de", 
                               "<b>", scales::comma(data_mexico$total),"</b>","ha"
                                     )
#df1 = select(resumen_ordenado, name, y, hover_text)



```


```{r echo=FALSE, message=FALSE, warning=FALSE}
hc_mapmex<-hcmap("countries/mx/mx-all", 
      data = data_mexico, 
      value = "total",
      joinBy = c("woe-name", "Entidad"),
      name ="<span style=\"font-size: 12px\">Superficie protegida</span>",
      dataLabels = list(enabled = TRUE, 
                        format = '{point.name}'),
      borderColor = "white", borderWidth = 0.5,
      tooltip = list(
        valueDecimals = 0, 
        valuePrefix = "<br>Superficie:", valueSuffix = " ha",
        useHTML = TRUE,
        pointFormat = '{point.hover_text}'
        
        )
      ) %>%
        hc_mapNavigation(enabled = TRUE) %>%
        hc_title(text="",
          align = "center",
                 style = list(color = "#000000", 
                              fontWeight = "bold"))%>%
  hc_colorAxis(
    minColor = "#B4EEB4", 
    maxColor = "#2A6C5C",
    title = list(
      text = "Superficie en hectáreas<br>(M: Millones)",
      style = list(
        color = "black",
        fontSize = '14px'
      )
    )) %>%
  hc_credits(enabled =FALSE)%>%
  hc_exporting(enabled = TRUE)

hc_mapmex

#saveWidget(as_widget(hc_mapmex), "plt-mapmxanp.html")


```















